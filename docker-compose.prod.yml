version: '3.8'

services:
  postgres:
    image: postgres:16-alpine3.20
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-cloud_nine}"]
      start_interval: 1s
      interval: 5s
      timeout: 5s
      retries: 5

    ports:
      - "5432:5432"
    
  backend:
    container_name: backend  # Explicitly name the container
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      - app_network
    healthcheck:  # Add healthcheck to verify backend is running
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"] 
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy


  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app_network
    volumes:
      - ./backend/uploads:/app/uploads

  
    

networks:
  app_network:
    driver: bridge