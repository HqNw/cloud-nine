#######################################################
# THIS FILE IS JUST FOR DEVELOPMENT PURPOSES ONLY!!!! #
#######################################################
version: '3.8'
services:

  proxy:
    image: traefik:v2.11
    command: --providers.docker
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


############################################
################  DATABASE  ################
############################################

  mongo:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false



############################################
################  FRONTEND  ################
############################################

  client:
    build:
      context: ./
      target: client-dev
    develop:
      watch:
        - path: ./client/package.json
          action: rebuild
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./client/src:/app/src
      - ./client/public:/app/public
      - ./client/index.html:/app/index.html
      - ./client/vite.config.ts:/app/vite.config.ts
      - ./client/tailwind.config.js:/app/tailwind.config.js
      - ./client/tsconfig.json:/app/tsconfig.json
      - ./client/tsconfig.app.json:/app/tsconfig.app.json
      - ./client/tsconfig.node.json:/app/tsconfig.node.json

    ports:
      - 5173:5173

    labels:
      traefik.http.routers.client.rule: Host(`localhost`)
      traefik.http.services.client.loadbalancer.server.port: 5174


###################################################
################  BACKEND STAGES  #################
###################################################
  backend:
    build:
      context: ./
      target: backend-dev

    # choose a database
    # environment:
      # MYSQL_HOST: mysql
      # MYSQL_USER: root
      # MYSQL_PASSWORD: secret
      # MYSQL_DB: todos
    develop:
      watch:
        - path: ./backend/package.json
          action: rebuild

    volumes:
      - ./backend/src:/app/src

    ports:
      - 3000:3000

    labels:
      traefik.http.routers.backend.rule: Host(`localhost`) && PathPrefix(`/api`)
      traefik.http.services.backend.loadbalancer.server.port: 3000

      # traefik.http.middlewares.strip-api-prefix.stripprefix.prefixes: /api
      # traefik.http.routers.backend.middlewares: strip-api-prefix
